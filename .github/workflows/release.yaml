name: Create release

on:
  workflow_call: 
    inputs:
      release_version:
        type: string
        required: true
        description: 'Release version formatted as "vMM.mm.pp-variant"'

env:
  RELEASE_VERSION: ""

jobs:
  create_gh_release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set release version
        id: set_release_version
        run: |
          RELEASE_VERSION=${{ inputs.release_version }}
          if [[ -n $RELEASE_VERSION ]] && [[ $RELEASE_VERSION =~ v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ ]]; then
            RELEASE_VERSION=$(echo "$RELEASE_VERSION" | cut -c 2-)
            echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_ENV"
          else
            echo "RELEASE_VERSION is $RELEASE_VERSION and it's invalid"
            exit 1
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          tag_name: ${{ inputs.release_version }}
          release_name: ${{ inputs.release_version }}
          body_path: ./CHANGELOG.md

      - name: NodeJS setup
        uses: actions/setup-node@v3
        with:
            node-version: 18

      - name: Generate .vsix
        run: npm ci && npm run package

      - name: Upload the .vsix to the release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vscode-sandbox-extension-example-${{ env.RELEASE_VERSION }}.vsix
          asset_name: vscode-sandbox-extension-example-${{ env.RELEASE_VERSION }}.vsix
          asset_content_type: application/octet-stream

  vsce_publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: create_gh_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: NodeJS setup
        uses: actions/setup-node@v3
        with:
            node-version: 18
      
      - name: Install dependencies
        run: npm ci

      - name: Publish package
        run: npx vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}